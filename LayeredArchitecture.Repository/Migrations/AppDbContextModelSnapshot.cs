// <auto-generated />
using System;
using LayeredArchitecture.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LayeredArchitecture.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LayeredArchitecture.Core.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Buzdolabı"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Çamaşır Makinesi"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bulaşık Makinesi"
                        });
                });

            modelBuilder.Entity("LayeredArchitecture.Core.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2022, 6, 6, 2, 26, 41, 505, DateTimeKind.Local).AddTicks(5771),
                            Name = "Altus",
                            Price = 7500m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2022, 6, 6, 2, 26, 41, 506, DateTimeKind.Local).AddTicks(7726),
                            Name = "Beko",
                            Price = 5500m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2022, 6, 6, 2, 26, 41, 506, DateTimeKind.Local).AddTicks(7755),
                            Name = "Samsung",
                            Price = 7500m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2022, 6, 6, 2, 26, 41, 506, DateTimeKind.Local).AddTicks(7762),
                            Name = "Beko",
                            Price = 2500m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2022, 6, 6, 2, 26, 41, 506, DateTimeKind.Local).AddTicks(7766),
                            Name = "Altus",
                            Price = 7500m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2022, 6, 6, 2, 26, 41, 506, DateTimeKind.Local).AddTicks(7768),
                            Name = "Beko",
                            Price = 3750m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2022, 6, 6, 2, 26, 41, 506, DateTimeKind.Local).AddTicks(7770),
                            Name = "Altus",
                            Price = 7500m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2022, 6, 6, 2, 26, 41, 506, DateTimeKind.Local).AddTicks(7773),
                            Name = "Beko",
                            Price = 5500m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2022, 6, 6, 2, 26, 41, 506, DateTimeKind.Local).AddTicks(7775),
                            Name = "Altus",
                            Price = 7500m,
                            Stock = 20
                        });
                });

            modelBuilder.Entity("LayeredArchitecture.Core.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Red",
                            Height = 200,
                            ProductId = 1,
                            Width = 300
                        },
                        new
                        {
                            Id = 2,
                            Color = "Blue",
                            Height = 350,
                            ProductId = 2,
                            Width = 300
                        },
                        new
                        {
                            Id = 3,
                            Color = "Green",
                            Height = 240,
                            ProductId = 3,
                            Width = 300
                        },
                        new
                        {
                            Id = 4,
                            Color = "Black",
                            Height = 320,
                            ProductId = 4,
                            Width = 300
                        },
                        new
                        {
                            Id = 5,
                            Color = "White",
                            Height = 210,
                            ProductId = 6,
                            Width = 300
                        },
                        new
                        {
                            Id = 6,
                            Color = "Yellow",
                            Height = 740,
                            ProductId = 7,
                            Width = 300
                        },
                        new
                        {
                            Id = 7,
                            Color = "Red",
                            Height = 480,
                            ProductId = 8,
                            Width = 300
                        },
                        new
                        {
                            Id = 8,
                            Color = "White",
                            Height = 200,
                            ProductId = 9,
                            Width = 300
                        });
                });

            modelBuilder.Entity("LayeredArchitecture.Core.Product", b =>
                {
                    b.HasOne("LayeredArchitecture.Core.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LayeredArchitecture.Core.ProductFeature", b =>
                {
                    b.HasOne("LayeredArchitecture.Core.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("LayeredArchitecture.Core.ProductFeature", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("LayeredArchitecture.Core.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("LayeredArchitecture.Core.Product", b =>
                {
                    b.Navigation("ProductFeature");
                });
#pragma warning restore 612, 618
        }
    }
}
